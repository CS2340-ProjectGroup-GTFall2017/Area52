-----------------------------------------
//M4 - User Stories for Team Area52 (#52)
-----------------------------------------
Eric (ID: ):

-----------------------------------------------------------------------------
Grace (ID: ):

-----------------------------------------------------------------------------
Randy (ID: ):

-----------------------------------------------------------------------------
Heejoo (ID: ):

-----------------------------------------------------------------------------
Jake (ID: jdeerin3):

    1) As a sanitation researcher, I want to view a map of all recorded rat sightings and their dates of occurrence, so that I can analyze which areas are most heavily infested with rats.

    2) As a system administrator, I want to be able to lock a user's account, so that users who persistently abuse the system (e.g. uploading fake data) cannot interfere with the data being generated by the app.
        - Tasks:
            - Add a "locked/unlocked" boolean to the User class
            - Add a widget to the Users view to allow the locked/unlocked variable to be set for each user inside the app
            - Make that widget only viewable/usable by Admins
            - Prevent "locked" Users from logging in succesfully
            - Set "locked/unlocked" field on existing User records
        - Acceptance Scenarios:
            - GIVEN the Admin has logged in and is viewing an existing User account, WHEN the Admin selects a checkbox to lock/unlock the user, THEN the locked/unlocked state of the user will toggle and be saved
            - GIVEN the Admin has tried to lock/unlock the user via the checkbox, WHEN the system cannot update the User's information (e.g. due to a database error), THEN an error message is given that the User information can't be updated, and the changes are not saved
            - GIVEN an existing User does not have the locked/unlocked field set, WHEN an Admin tries to lock/unlock the User, THEN an error message is given that the User doest not have that information, and no changes are saved
            - GIVEN a locked user has entered their login information succesfully, WHEN the locked user tries to log in, THEN they are not logged in, and instead presented with a message that their account has been locked
            - GIVEN a locked user incorrectly enters their login information, WHEN the locked user tries to log in, THEN they are warned that their login information is incorrect and not logged in, and no information about if their account has been locked/unlocked is given
        - "Done Done" Criteria
            - Unit tests are written to verify locking/unlocking works as intended, and those tests are passed
            - Code has been reviewed by at least one other team member
            - Code is merged w/ master branch
