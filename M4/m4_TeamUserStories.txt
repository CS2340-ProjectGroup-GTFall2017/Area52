

-----------------------------------------
//M4 - User Stories for Team Area52 (#52)
-----------------------------------------
Eric (ID: ):

-----------------------------------------------------------------------------
Grace (ID: ekang40):

As a NYC resident, I want to report the area where rats are infested and track all the rat sightings in NYC and around the city so that I can prevent from rat invading.

- Tasks:
	- Create an account to register for application use
	- receives an email confirmation after creating an account. 
	- Access to features of application
	- Log in and Log out by clicking a button
	- receives a message of invalid password/userName when tried to log in by typing wrong information.

-Acceptance Scenarios:
	GIVEN a message of success registering to users WHEN they have created an account correctly THEN users are eligible to access to the application.
	GIVEN a error message to users WHEN either their account’s user’s name/ passwrod is invalid THEN they can click the retry button or cancel button.
	GIVEN a confirmation email to users WHEN they created their account THEN they will receive the confirmation email and able to confirm themselves.
	GIVEN a users to log out WHEN users click a log out button THEN users will be logged out from their account. 

- “Done Done" Criteria:
	- Acceptance criteria met
	- Test cases are written
	- Feature is tested for accessibility

-----------------------------------------------------------------------------
Randy (ID: rreeves32):



1) As a NYC tourist, I want to view rat sightings in my part of the city, so that I can plan my route to avoid seeing a bunch of rats.

2) As a NYC division EPA employee, I want to view the rat's location in proximity to majour rivers, so that I candetermine the risk of environmental contamination

- Tasks:
            - Add a radius to the rat's location, dependant on rat size
            - Add local watershed data
            - Correlate watershed location data to rat location radius
            - Add default rat radius if no size specified
            - If radius crosses into watershed location on map, set risk to high of contamination, else low
            
        - Acceptance Scenarios:
            - GIVEN the rat is in a watershed area, WHEN the rat's lcoation does not cross the actual vessel, THEN the risk for contamination is set to LOW
            -GIVEN the rat is in a watershed area, WHEN the rat's location crosses into the actual vessel, THEN the risk for contamination is set to HIGH
            -GIVEN the rat appears on the map, WHEN the EPA user opens the rat's info, THEN the watershed and risk are displayed 
            -GIVEN the rat data is autopopulated, WHEN the rat is created, THEN radius should be set to match the default rat size
            -GIVEN the rat data is autopopulated, WHEN the rat is created, THEN the watershed and risk should match the location of the rat and radius.
            
        
        - "Done Done" Criteria
            - Risk and watershed criteria are met
            - Unit tests are written to verify locking/unlocking works as intended, and those tests are passed
            - Code has been reviewed by at least one other team member
            - Code is merged w/ master branch

-----------------------------------------------------------------------------
Heejoo (ID: ):

-----------------------------------------------------------------------------
Jake (ID: jdeerin3):

    1) As a sanitation researcher, I want to view a map of all recorded rat sightings and their dates of occurrence, so that I can analyze which areas are most heavily infested with rats.

    2) As a system administrator, I want to be able to lock a user's account, so that users who persistently abuse the system (e.g. uploading fake data) cannot interfere with the data being generated by the app.
        - Tasks:
            - Add a "locked/unlocked" boolean to the User class
            - Add a widget to the Users view to allow the locked/unlocked variable to be set for each user inside the app
            - Make that widget only viewable/usable by Admins
            - Prevent "locked" Users from logging in succesfully
            - Set "locked/unlocked" field on existing User records
        - Acceptance Scenarios:
            - GIVEN the Admin has logged in and is viewing an existing User account, WHEN the Admin selects a checkbox to lock/unlock the user, THEN the locked/unlocked state of the user will toggle and be saved
            - GIVEN the Admin has tried to lock/unlock the user via the checkbox, WHEN the system cannot update the User's information (e.g. due to a database error), THEN an error message is given that the User information can't be updated, and the changes are not saved
            - GIVEN an existing User does not have the locked/unlocked field set, WHEN an Admin tries to lock/unlock the User, THEN an error message is given that the User doest not have that information, and no changes are saved
            - GIVEN a locked user has entered their login information succesfully, WHEN the locked user tries to log in, THEN they are not logged in, and instead presented with a message that their account has been locked
            - GIVEN a locked user incorrectly enters their login information, WHEN the locked user tries to log in, THEN they are warned that their login information is incorrect and not logged in, and no information about if their account has been locked/unlocked is given
        - "Done Done" Criteria
            - Unit tests are written to verify locking/unlocking works as intended, and those tests are passed
            - Code has been reviewed by at least one other team member
            - Code is merged w/ master branch
